#  <구현> (Implementation)
  # 일반적 : 머릿속에 있는 알고리즘 -> 소스코드로 작성
  # 코테 : 풀이를 떠올리는 것은 쉽지만 소스코드로 옮기기 어려운 문제
  # EX) 
    # 알고리즘은 간단한데 코드가 지나칠 만큼 길어지는 문제
    # 실수 연산을 다루고, 특정 소수점 자리까지 출력해야 하는 문제
    # 문자열을 특정한 기준에 따라 끊어서 처리해야 하는 문제
    # 적절한 라이브러리를 찾아서 사용해야 하는 문제
  # 시뮬레이션 유형, 완전 탐색 유형, 구현 유형
    
    
# <2차원 공간 : 행렬>
# 왼쪽 최상단 (0,0)에서 아래쪽 +x방향(세로축, 행), 오른쪽 +y방향 (가로축, 열)
# 2차원 공간에서의 방향벡터가 자주 활용 at 시뮬레이션 및 완전 탐색 문제


for i in range(5) :
  for j in range(5) : 
    print('(',i,',',j,')', end=' ')
  print(" ")
  
# 동, 북, 서, 남
# 각 방향으로 움직이는 작업 : + ( dx[0], dx[1], dx[2], dx[3] )
dx = [0,-1,0,1] # direction x
dy = [1,0,-1,0] # direction y


# 현재 위치
x,y = 2,2

for i in range(4) : 
  # 댜음 위치를 방향벡터로 표현 : x따로 & y따로 or (x,y)
  nx = x + dx[i]
  ny = y + dy[i]
  
  # 예외처리 with continue : 예외 발생시 임시 저장소에서 끝 (최종 저장소로 옮기지 않음)
  
  # 임시 좌표 -> 최종 좌표로 옮기는 과정
  x,y = nx, ny

# nx, ny : 임시 좌표
# x,y : 최종 좌표

print(x,y)
  
