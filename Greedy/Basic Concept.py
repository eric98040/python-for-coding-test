'''
• <그리디 알고리즘>

  • 현재 상황에서 지금 당장 좋은 것만 고르는 방법
  • 문제를 풀기 위한 최소한의 아이디어를 떠올리기 (단순히 현재 상황에서 가장 좋아보이는 것만을 선택해도 ok?)
  • 정당성 분석 : 단순히 가장 좋아 보이는 것을 반복적으로 선택해도 최적의 해를 구할 수 있는가
  
  • 일반적인 상황 : 최적의 해를 보장할 수 없을 때가 많음
  • 코딩테스트 : 탐욕법으로 얻은 해가 최적의 해가 되는 상황 <-- 이를 추론해야 풀 수 있음
  
  • '가장 큰 순서대로' , '가장 작은 순서대로'와 같은 기준을 알게 모르게 제시
  • 정렬 알고리즘과 짝을 이루어 코딩 테스트에 자주 출제
'''
  
  
# ex1 : 거스름돈 문제

  # 정당성 분석 : 큰 단위가 항상 작은 단위의 배수이므로 작은 단위의 동전들을 조합해 다른 해가 나올 수 없음
  
# < my solv >

array = [500,100,50,10]
n = int(input())
cnt = 0
for i in array :
  # while n >= i : 
    cnt+=n//i
    n %=i   # 이 코드를 실행하면 어차피 n < i 가 되기 때문에 while문을 안 돌아도 됨
print(cnt)

# < solution >

coin_list = [500,100,50,10]
n = int(input())
cnt = 0
for coin in coin_list : 
  cnt +=  n//coin
  n%= coin
  
print(cnt)
